// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleTable.Data;

namespace SimpleTable.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleTable.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new { Id = 1, Name = "Production" },
                        new { Id = 2, Name = "Research and Development" },
                        new { Id = 3, Name = "Purchasing" },
                        new { Id = 4, Name = "Marketing" },
                        new { Id = 5, Name = "Human Resource Management" },
                        new { Id = 6, Name = "Accounting" }
                    );
                });

            modelBuilder.Entity("SimpleTable.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<bool>("IsCertified");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new { Id = 1, BirthDate = new DateTime(1997, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 6, Email = "cvicarey0@rambler.ru", FirstName = "Cleveland", Gender = 0, IsCertified = false, LastName = "Vicarey", Phone = "51 523 699 9284" },
                        new { Id = 2, BirthDate = new DateTime(1998, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 2, Email = "fpersich1@hibu.com", FirstName = "Francyne", Gender = 1, IsCertified = false, LastName = "Persich", Phone = "62 196 534 2823" },
                        new { Id = 3, BirthDate = new DateTime(1977, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 5, Email = "hcarlin2@google.ca", FirstName = "Hugo", Gender = 0, IsCertified = true, LastName = "Carlin", Phone = "86 410 472 9880" },
                        new { Id = 4, BirthDate = new DateTime(1991, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 3, Email = "cwhalley3@yellowbook.com", FirstName = "Clayson", Gender = 0, IsCertified = false, LastName = "Whalley", Phone = "1 149 158 3062" },
                        new { Id = 5, BirthDate = new DateTime(1993, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 6, Email = "fclemitt4@wordpress.com", FirstName = "Fairleigh", Gender = 0, IsCertified = false, LastName = "Clemitt", Phone = "44 276 410 3141" },
                        new { Id = 6, BirthDate = new DateTime(1999, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 6, Email = "eregler5@seesaa.net", FirstName = "Erastus", Gender = 0, IsCertified = true, LastName = "Regler", Phone = "962 309 299 2461" },
                        new { Id = 7, BirthDate = new DateTime(1990, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 2, Email = "dlankford6@ehow.com", FirstName = "Devlin", Gender = 0, IsCertified = false, LastName = "Lankford", Phone = "34 794 445 7780" },
                        new { Id = 8, BirthDate = new DateTime(1970, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 2, Email = "hbenedyktowicz7@barnesandnoble.com", FirstName = "Halie", Gender = 1, IsCertified = true, LastName = "Benedyktowicz", Phone = "1 304 498 6560" },
                        new { Id = 9, BirthDate = new DateTime(1994, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 6, Email = "rwrassell8@samsung.com", FirstName = "Ransell", Gender = 0, IsCertified = false, LastName = "Wrassell", Phone = "591 244 781 3894" },
                        new { Id = 10, BirthDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), DepartmentId = 1, Email = "kkubacek9@ed.gov", FirstName = "Kaylil", Gender = 1, IsCertified = false, LastName = "Kubacek", Phone = "86 209 214 4933" }
                    );
                });

            modelBuilder.Entity("SimpleTable.Models.Employee", b =>
                {
                    b.HasOne("SimpleTable.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
